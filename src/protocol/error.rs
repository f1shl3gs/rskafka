//! Error codes.
//!
//! # References
//! - <https://kafka.apache.org/protocol#protocol_error_codes>

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
#[allow(clippy::enum_variant_names)]
#[non_exhaustive]
pub enum Error {
    UnknownServerError,
    OffsetOutOfRange,
    CorruptMessage,
    UnknownTopicOrPartition,
    InvalidFetchSize,
    LeaderNotAvailable,
    NotLeaderOrFollower,
    RequestTimedOut,
    BrokerNotAvailable,
    ReplicaNotAvailable,
    MessageTooLarge,
    StaleControllerEpoch,
    OffsetMetadataTooLarge,
    NetworkException,
    CoordinatorLoadInProgress,
    CoordinatorNotAvailable,
    NotCoordinator,
    InvalidTopicException,
    RecordListTooLarge,
    NotEnoughReplicas,
    NotEnoughReplicasAfterAppend,
    InvalidRequiredAcks,
    IllegalGeneration,
    InconsistentGroupProtocol,
    InvalidGroupId,
    UnknownMemberId,
    InvalidSessionTimeout,
    RebalanceInProgress,
    InvalidCommitOffsetSize,
    TopicAuthorizationFailed,
    GroupAuthorizationFailed,
    ClusterAuthorizationFailed,
    InvalidTimestamp,
    UnsupportedSaslMechanism,
    IllegalSaslState,
    UnsupportedVersion,
    TopicAlreadyExists,
    InvalidPartitions,
    InvalidReplicationFactor,
    InvalidReplicaAssignment,
    InvalidConfig,
    NotController,
    InvalidRequest,
    UnsupportedForMessageFormat,
    PolicyViolation,
    OutOfOrderSequenceNumber,
    DuplicateSequenceNumber,
    InvalidProducerEpoch,
    InvalidTxnState,
    InvalidProducerIdMapping,
    InvalidTransactionTimeout,
    ConcurrentTransactions,
    TransactionCoordinatorFenced,
    TransactionalIdAuthorizationFailed,
    SecurityDisabled,
    OperationNotAttempted,
    KafkaStorageError,
    LogDirNotFound,
    SaslAuthenticationFailed,
    UnknownProducerId,
    ReassignmentInProgress,
    DelegationTokenAuthDisabled,
    DelegationTokenNotFound,
    DelegationTokenOwnerMismatch,
    DelegationTokenRequestNotAllowed,
    DelegationTokenAuthorizationFailed,
    DelegationTokenExpired,
    InvalidPrincipalType,
    NonEmptyGroup,
    GroupIdNotFound,
    FetchSessionIdNotFound,
    InvalidFetchSessionEpoch,
    ListenerNotFound,
    TopicDeletionDisabled,
    FencedLeaderEpoch,
    UnknownLeaderEpoch,
    UnsupportedCompressionType,
    StaleBrokerEpoch,
    OffsetNotAvailable,
    MemberIdRequired,
    PreferredLeaderNotAvailable,
    GroupMaxSizeReached,
    FencedInstanceId,
    EligibleLeadersNotAvailable,
    ElectionNotNeeded,
    NoReassignmentInProgress,
    GroupSubscribedToTopic,
    InvalidRecord,
    UnstableOffsetCommit,
    ThrottlingQuotaExceeded,
    ProducerFenced,
    ResourceNotFound,
    DuplicateResource,
    UnacceptableCredential,
    InconsistentVoterSet,
    InvalidUpdateVersion,
    FeatureUpdateFailed,
    PrincipalDeserializationFailure,
    SnapshotNotFound,
    PositionOutOfRange,
    UnknownTopicId,
    DuplicateBrokerRegistration,
    BrokerIdNotRegistered,
    InconsistentTopicId,
    InconsistentClusterId,
    TransactionalIdNotFound,
    Unknown(i16),
}

impl Error {
    /// Conversion from [`i16`].
    ///
    /// This cannot be a `From` trait due to <https://github.com/rust-lang/rfcs/issues/1402>.
    pub fn new(code: i16) -> Option<Self> {
        match code {
            -1 => Some(Self::UnknownServerError),
            0 => None,
            1 => Some(Self::OffsetOutOfRange),
            2 => Some(Self::CorruptMessage),
            3 => Some(Self::UnknownTopicOrPartition),
            4 => Some(Self::InvalidFetchSize),
            5 => Some(Self::LeaderNotAvailable),
            6 => Some(Self::NotLeaderOrFollower),
            7 => Some(Self::RequestTimedOut),
            8 => Some(Self::BrokerNotAvailable),
            9 => Some(Self::ReplicaNotAvailable),
            10 => Some(Self::MessageTooLarge),
            11 => Some(Self::StaleControllerEpoch),
            12 => Some(Self::OffsetMetadataTooLarge),
            13 => Some(Self::NetworkException),
            14 => Some(Self::CoordinatorLoadInProgress),
            15 => Some(Self::CoordinatorNotAvailable),
            16 => Some(Self::NotCoordinator),
            17 => Some(Self::InvalidTopicException),
            18 => Some(Self::RecordListTooLarge),
            19 => Some(Self::NotEnoughReplicas),
            20 => Some(Self::NotEnoughReplicasAfterAppend),
            21 => Some(Self::InvalidRequiredAcks),
            22 => Some(Self::IllegalGeneration),
            23 => Some(Self::InconsistentGroupProtocol),
            24 => Some(Self::InvalidGroupId),
            25 => Some(Self::UnknownMemberId),
            26 => Some(Self::InvalidSessionTimeout),
            27 => Some(Self::RebalanceInProgress),
            28 => Some(Self::InvalidCommitOffsetSize),
            29 => Some(Self::TopicAuthorizationFailed),
            30 => Some(Self::GroupAuthorizationFailed),
            31 => Some(Self::ClusterAuthorizationFailed),
            32 => Some(Self::InvalidTimestamp),
            33 => Some(Self::UnsupportedSaslMechanism),
            34 => Some(Self::IllegalSaslState),
            35 => Some(Self::UnsupportedVersion),
            36 => Some(Self::TopicAlreadyExists),
            37 => Some(Self::InvalidPartitions),
            38 => Some(Self::InvalidReplicationFactor),
            39 => Some(Self::InvalidReplicaAssignment),
            40 => Some(Self::InvalidConfig),
            41 => Some(Self::NotController),
            42 => Some(Self::InvalidRequest),
            43 => Some(Self::UnsupportedForMessageFormat),
            44 => Some(Self::PolicyViolation),
            45 => Some(Self::OutOfOrderSequenceNumber),
            46 => Some(Self::DuplicateSequenceNumber),
            47 => Some(Self::InvalidProducerEpoch),
            48 => Some(Self::InvalidTxnState),
            49 => Some(Self::InvalidProducerIdMapping),
            50 => Some(Self::InvalidTransactionTimeout),
            51 => Some(Self::ConcurrentTransactions),
            52 => Some(Self::TransactionCoordinatorFenced),
            53 => Some(Self::TransactionalIdAuthorizationFailed),
            54 => Some(Self::SecurityDisabled),
            55 => Some(Self::OperationNotAttempted),
            56 => Some(Self::KafkaStorageError),
            57 => Some(Self::LogDirNotFound),
            58 => Some(Self::SaslAuthenticationFailed),
            59 => Some(Self::UnknownProducerId),
            60 => Some(Self::ReassignmentInProgress),
            61 => Some(Self::DelegationTokenAuthDisabled),
            62 => Some(Self::DelegationTokenNotFound),
            63 => Some(Self::DelegationTokenOwnerMismatch),
            64 => Some(Self::DelegationTokenRequestNotAllowed),
            65 => Some(Self::DelegationTokenAuthorizationFailed),
            66 => Some(Self::DelegationTokenExpired),
            67 => Some(Self::InvalidPrincipalType),
            68 => Some(Self::NonEmptyGroup),
            69 => Some(Self::GroupIdNotFound),
            70 => Some(Self::FetchSessionIdNotFound),
            71 => Some(Self::InvalidFetchSessionEpoch),
            72 => Some(Self::ListenerNotFound),
            73 => Some(Self::TopicDeletionDisabled),
            74 => Some(Self::FencedLeaderEpoch),
            75 => Some(Self::UnknownLeaderEpoch),
            76 => Some(Self::UnsupportedCompressionType),
            77 => Some(Self::StaleBrokerEpoch),
            78 => Some(Self::OffsetNotAvailable),
            79 => Some(Self::MemberIdRequired),
            80 => Some(Self::PreferredLeaderNotAvailable),
            81 => Some(Self::GroupMaxSizeReached),
            82 => Some(Self::FencedInstanceId),
            83 => Some(Self::EligibleLeadersNotAvailable),
            84 => Some(Self::ElectionNotNeeded),
            85 => Some(Self::NoReassignmentInProgress),
            86 => Some(Self::GroupSubscribedToTopic),
            87 => Some(Self::InvalidRecord),
            88 => Some(Self::UnstableOffsetCommit),
            89 => Some(Self::ThrottlingQuotaExceeded),
            90 => Some(Self::ProducerFenced),
            91 => Some(Self::ResourceNotFound),
            92 => Some(Self::DuplicateResource),
            93 => Some(Self::UnacceptableCredential),
            94 => Some(Self::InconsistentVoterSet),
            95 => Some(Self::InvalidUpdateVersion),
            96 => Some(Self::FeatureUpdateFailed),
            97 => Some(Self::PrincipalDeserializationFailure),
            98 => Some(Self::SnapshotNotFound),
            99 => Some(Self::PositionOutOfRange),
            100 => Some(Self::UnknownTopicId),
            101 => Some(Self::DuplicateBrokerRegistration),
            102 => Some(Self::BrokerIdNotRegistered),
            103 => Some(Self::InconsistentTopicId),
            104 => Some(Self::InconsistentClusterId),
            105 => Some(Self::TransactionalIdNotFound),
            _ => Some(Self::Unknown(code)),
        }
    }

    pub fn code(&self) -> i16 {
        match self {
            Self::UnknownServerError => -1,
            Self::OffsetOutOfRange => 1,
            Self::CorruptMessage => 2,
            Self::UnknownTopicOrPartition => 3,
            Self::InvalidFetchSize => 4,
            Self::LeaderNotAvailable => 5,
            Self::NotLeaderOrFollower => 6,
            Self::RequestTimedOut => 7,
            Self::BrokerNotAvailable => 8,
            Self::ReplicaNotAvailable => 9,
            Self::MessageTooLarge => 10,
            Self::StaleControllerEpoch => 11,
            Self::OffsetMetadataTooLarge => 12,
            Self::NetworkException => 13,
            Self::CoordinatorLoadInProgress => 14,
            Self::CoordinatorNotAvailable => 15,
            Self::NotCoordinator => 16,
            Self::InvalidTopicException => 17,
            Self::RecordListTooLarge => 18,
            Self::NotEnoughReplicas => 19,
            Self::NotEnoughReplicasAfterAppend => 20,
            Self::InvalidRequiredAcks => 21,
            Self::IllegalGeneration => 22,
            Self::InconsistentGroupProtocol => 23,
            Self::InvalidGroupId => 24,
            Self::UnknownMemberId => 25,
            Self::InvalidSessionTimeout => 26,
            Self::RebalanceInProgress => 27,
            Self::InvalidCommitOffsetSize => 28,
            Self::TopicAuthorizationFailed => 29,
            Self::GroupAuthorizationFailed => 30,
            Self::ClusterAuthorizationFailed => 31,
            Self::InvalidTimestamp => 32,
            Self::UnsupportedSaslMechanism => 33,
            Self::IllegalSaslState => 34,
            Self::UnsupportedVersion => 35,
            Self::TopicAlreadyExists => 36,
            Self::InvalidPartitions => 37,
            Self::InvalidReplicationFactor => 38,
            Self::InvalidReplicaAssignment => 39,
            Self::InvalidConfig => 40,
            Self::NotController => 41,
            Self::InvalidRequest => 42,
            Self::UnsupportedForMessageFormat => 43,
            Self::PolicyViolation => 44,
            Self::OutOfOrderSequenceNumber => 45,
            Self::DuplicateSequenceNumber => 46,
            Self::InvalidProducerEpoch => 47,
            Self::InvalidTxnState => 48,
            Self::InvalidProducerIdMapping => 49,
            Self::InvalidTransactionTimeout => 50,
            Self::ConcurrentTransactions => 51,
            Self::TransactionCoordinatorFenced => 52,
            Self::TransactionalIdAuthorizationFailed => 53,
            Self::SecurityDisabled => 54,
            Self::OperationNotAttempted => 55,
            Self::KafkaStorageError => 56,
            Self::LogDirNotFound => 57,
            Self::SaslAuthenticationFailed => 58,
            Self::UnknownProducerId => 59,
            Self::ReassignmentInProgress => 60,
            Self::DelegationTokenAuthDisabled => 61,
            Self::DelegationTokenNotFound => 62,
            Self::DelegationTokenOwnerMismatch => 63,
            Self::DelegationTokenRequestNotAllowed => 64,
            Self::DelegationTokenAuthorizationFailed => 65,
            Self::DelegationTokenExpired => 66,
            Self::InvalidPrincipalType => 67,
            Self::NonEmptyGroup => 68,
            Self::GroupIdNotFound => 69,
            Self::FetchSessionIdNotFound => 70,
            Self::InvalidFetchSessionEpoch => 71,
            Self::ListenerNotFound => 72,
            Self::TopicDeletionDisabled => 73,
            Self::FencedLeaderEpoch => 74,
            Self::UnknownLeaderEpoch => 75,
            Self::UnsupportedCompressionType => 76,
            Self::StaleBrokerEpoch => 77,
            Self::OffsetNotAvailable => 78,
            Self::MemberIdRequired => 79,
            Self::PreferredLeaderNotAvailable => 80,
            Self::GroupMaxSizeReached => 81,
            Self::FencedInstanceId => 82,
            Self::EligibleLeadersNotAvailable => 83,
            Self::ElectionNotNeeded => 84,
            Self::NoReassignmentInProgress => 85,
            Self::GroupSubscribedToTopic => 86,
            Self::InvalidRecord => 87,
            Self::UnstableOffsetCommit => 88,
            Self::ThrottlingQuotaExceeded => 89,
            Self::ProducerFenced => 90,
            Self::ResourceNotFound => 91,
            Self::DuplicateResource => 92,
            Self::UnacceptableCredential => 93,
            Self::InconsistentVoterSet => 94,
            Self::InvalidUpdateVersion => 95,
            Self::FeatureUpdateFailed => 96,
            Self::PrincipalDeserializationFailure => 97,
            Self::SnapshotNotFound => 98,
            Self::PositionOutOfRange => 99,
            Self::UnknownTopicId => 100,
            Self::DuplicateBrokerRegistration => 101,
            Self::BrokerIdNotRegistered => 102,
            Self::InconsistentTopicId => 103,
            Self::InconsistentClusterId => 104,
            Self::TransactionalIdNotFound => 105,
            Self::Unknown(code) => *code,
        }
    }
}

impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{:?}", self)
    }
}

impl std::error::Error for Error {}
